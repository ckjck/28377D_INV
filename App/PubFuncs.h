

//常用宏
#define		S2U(x)		(*((volatile UINT16*)(&(x))))

#define 	MAX2(x,y)	(((x)>=(y))?(x):(y))
#define 	MIN2(x,y)	(((x)<=(y))?(x):(y))
#define 	SIGN(x)		(((x)<=0)?0:1)
#define 	UPDNLMT16(Var,Max,Min)	{(Var)=((Var)>=(Max))?(Max):(Var);(Var)=((Var)<=(Min))?(Min):(Var);}
#define 	UPDNLMT32(Var,Max,Min)	{(Var)=((Var)>=(Max))?(Max):(Var);(Var)=((Var)<=(Min))?(Min):(Var);}
#define 	FILTER(ik,iVar,lMean)	(((((long)(iVar)<<16)-(lMean))>>((ik)+1))+(lMean))   

 
class		Class_Monitor;
class		Class_CAN;

//class		Class_Settings;			
class		Class_System;
class		Class_PowCANProtocol;
class		Class_PowCANScheduler;	
class		Class_DigitalIO;			
class		Class_Switches;			
class		Class_Bypass;			
class		Class_Inverter;			
class		Class_Output;			
class		Class_Parallel;			
class		Class_DCBus;				
class		Class_InverterAlgorithm;	
class		Class_MonitorInterface;	
class		Class_Load;				
class		Class_InverterControl;	
class		Class_Transfer;			
class		Class_LBS;				
class		Class_Service;			
class		Class_FaultRecord;	
class		Class_EEPROM;	
class		Class_SelfAgingAlgorithm;
class		Class_Debug;			

//System CAN class statement
class 		SysCanProtocol;
class 		SysCanApp;
class 		SysCanDataExchg;
                      
//extern		Class_Settings				objSettings;
extern		Class_System				objSystem;
extern		Class_PowCANProtocol		objPowCANPro;
extern		Class_PowCANScheduler		objPowCANSched;
extern		Class_DigitalIO				objDigitalIO;
extern		Class_Switches				objSwitches;
extern		Class_Bypass				objBypass;
extern		Class_Inverter				objInverter;
extern		Class_Output				objOutput;
extern		Class_Parallel				objParallel;
extern		Class_DCBus					objDCBus;
extern		Class_InverterAlgorithm		objInvAlg;
extern		Class_MonitorInterface		objMonInterface;
extern		Class_Load					objLoad;
extern		Class_InverterControl		objInvCtrl;
extern		Class_Transfer				objXfer;
extern		Class_LBS					objLBS;
extern		Class_Service				objService;
extern		Class_FaultRecord			objFaultRecord;
extern		Class_EEPROM				objEEPROM;
extern		Class_SelfAgingAlgorithm	objSelfAgingAlg;
extern		Class_Debug					objDebug;                      

//-----System CAN 相关定义--------
extern		SysCanProtocol		ProtocolObj;
extern 		SysCanApp			SysCanAppObj;
//应用层消息处理对象
extern		SysCanDataExchg 		DataExchgObj;

//---------------------------------------
  
//开方表	sqrt(ver*65536)
const	int sqrtTab[1026]=
{ 
	0,256,362,443,512,572,627,677,724,768,            
    810,849,887,923,958,991,1024,1056,1086,1116,      
    1145,1173,1201,1228,1254,1280,1305,1330,1355,1379,
    1402,1425,1448,1471,1493,1515,1536,1557,1578,1599,
    1619,1639,1659,1679,1698,1717,1736,1755,1774,1792,
    1810,1828,1846,1864,1881,1899,1916,1933,1950,1966,
    1983,1999,2016,2032,2048,2064,2080,2095,2111,2126,
    2142,2157,2172,2187,2202,2217,2232,2246,2261,2275,
    2290,2304,2318,2332,2346,2360,2374,2388,2401,2415,
    2429,2442,2455,2469,2482,2495,2508,2521,2534,2547,
    2560,2573,2585,2598,2611,2623,2636,2648,2660,2673,
    2685,2697,2709,2721,2733,2745,2757,2769,2781,2793,
    2804,2816,2828,2839,2851,2862,2874,2885,2896,2908,
    2919,2930,2941,2952,2963,2974,2985,2996,3007,3018,
    3029,3040,3051,3061,3072,3083,3093,3104,3114,3125,
    3135,3146,3156,3167,3177,3187,3197,3208,3218,3228,
    3238,3248,3258,3268,3278,3288,3298,3308,3318,3328,
    3338,3348,3357,3367,3377,3387,3396,3406,3415,3425,
    3435,3444,3454,3463,3473,3482,3491,3501,3510,3519,
    3529,3538,3547,3556,3566,3575,3584,3593,3602,3611,
    3620,3629,3638,3647,3656,3665,3674,3683,3692,3701,
    3710,3719,3727,3736,3745,3754,3762,3771,3780,3788,
    3797,3806,3814,3823,3831,3840,3849,3857,3866,3874,
    3882,3891,3899,3908,3916,3924,3933,3941,3949,3958,
    3966,3974,3982,3991,3999,4007,4015,4023,4031,4040,
    4048,4056,4064,4072,4080,4088,4096,4104,4112,4120,
    4128,4136,4144,4152,4160,4167,4175,4183,4191,4199,
    4207,4214,4222,4230,4238,4245,4253,4261,4268,4276,
    4284,4291,4299,4307,4314,4322,4329,4337,4344,4352,
    4360,4367,4375,4382,4389,4397,4404,4412,4419,4427,
    4434,4441,4449,4456,4464,4471,4478,4485,4493,4500,
    4507,4515,4522,4529,4536,4544,4551,4558,4565,4572,
    4579,4587,4594,4601,4608,4615,4622,4629,4636,4643,
    4650,4658,4665,4672,4679,4686,4693,4700,4707,4713,
    4720,4727,4734,4741,4748,4755,4762,4769,4776,4782,
    4789,4796,4803,4810,4817,4823,4830,4837,4844,4851,
    4857,4864,4871,4877,4884,4891,4898,4904,4911,4918,
    4924,4931,4938,4944,4951,4957,4964,4971,4977,4984,
    4990,4997,5003,5010,5017,5023,5030,5036,5043,5049,
    5056,5062,5069,5075,5081,5088,5094,5101,5107,5114,
    5120,5126,5133,5139,5146,5152,5158,5165,5171,5177,
    5184,5190,5196,5203,5209,5215,5221,5228,5234,5240,
    5246,5253,5259,5265,5271,5278,5284,5290,5296,5302,
    5309,5315,5321,5327,5333,5339,5345,5352,5358,5364,
    5370,5376,5382,5388,5394,5400,5406,5412,5418,5425,
    5431,5437,5443,5449,5455,5461,5467,5473,5479,5485,
    5491,5497,5503,5508,5514,5520,5526,5532,5538,5544,
    5550,5556,5562,5568,5574,5579,5585,5591,5597,5603,
    5609,5615,5620,5626,5632,5638,5644,5649,5655,5661,
    5667,5673,5678,5684,5690,5696,5701,5707,5713,5719,
    5724,5730,5736,5741,5747,5753,5759,5764,5770,5776,
    5781,5787,5793,5798,5804,5810,5815,5821,5826,5832,
    5838,5843,5849,5855,5860,5866,5871,5877,5882,5888,
    5894,5899,5905,5910,5916,5921,5927,5932,5938,5943,
    5949,5954,5960,5965,5971,5976,5982,5987,5993,5998,
    6004,6009,6015,6020,6026,6031,6036,6042,6047,6053,
    6058,6063,6069,6074,6080,6085,6090,6096,6101,6107,
    6112,6117,6123,6128,6133,6139,6144,6149,6155,6160,
    6165,6171,6176,6181,6187,6192,6197,6202,6208,6213,
    6218,6223,6229,6234,6239,6245,6250,6255,6260,6265,
    6271,6276,6281,6286,6292,6297,6302,6307,6312,6318,
    6323,6328,6333,6338,6343,6349,6354,6359,6364,6369,
    6374,6379,6385,6390,6395,6400,6405,6410,6415,6420,
    6426,6431,6436,6441,6446,6451,6456,6461,6466,6471,
    6476,6481,6486,6492,6497,6502,6507,6512,6517,6522,
    6527,6532,6537,6542,6547,6552,6557,6562,6567,6572,
    6577,6582,6587,6592,6597,6602,6607,6612,6616,6621,
    6626,6631,6636,6641,6646,6651,6656,6661,6666,6671,
    6676,6681,6685,6690,6695,6700,6705,6710,6715,6720,
    6725,6729,6734,6739,6744,6749,6754,6759,6763,6768,
    6773,6778,6783,6788,6792,6797,6802,6807,6812,6817,
    6821,6826,6831,6836,6841,6845,6850,6855,6860,6864,
    6869,6874,6879,6883,6888,6893,6898,6903,6907,6912,
    6917,6921,6926,6931,6936,6940,6945,6950,6955,6959,
    6964,6969,6973,6978,6983,6987,6992,6997,7001,7006,
    7011,7016,7020,7025,7030,7034,7039,7043,7048,7053,
    7057,7062,7067,7071,7076,7081,7085,7090,7094,7099,
    7104,7108,7113,7118,7122,7127,7131,7136,7141,7145,
    7150,7154,7159,7163,7168,7173,7177,7182,7186,7191,
    7195,7200,7204,7209,7214,7218,7223,7227,7232,7236,
    7241,7245,7250,7254,7259,7263,7268,7272,7277,7281,
    7286,7290,7295,7299,7304,7308,7313,7317,7322,7326,
    7331,7335,7340,7344,7349,7353,7357,7362,7366,7371,
    7375,7380,7384,7389,7393,7397,7402,7406,7411,7415,
    7420,7424,7428,7433,7437,7442,7446,7450,7455,7459,
    7464,7468,7472,7477,7481,7486,7490,7494,7499,7503,
    7507,7512,7516,7520,7525,7529,7534,7538,7542,7547,
    7551,7555,7560,7564,7568,7573,7577,7581,7586,7590,
    7594,7599,7603,7607,7611,7616,7620,7624,7629,7633,
    7637,7642,7646,7650,7654,7659,7663,7667,7671,7676,
    7680,7684,7689,7693,7697,7701,7706,7710,7714,7718,
    7723,7727,7731,7735,7740,7744,7748,7752,7756,7761,
    7765,7769,7773,7778,7782,7786,7790,7794,7799,7803,
    7807,7811,7815,7820,7824,7828,7832,7836,7840,7845,
    7849,7853,7857,7861,7865,7870,7874,7878,7882,7886,
    7890,7895,7899,7903,7907,7911,7915,7919,7924,7928,
    7932,7936,7940,7944,7948,7952,7957,7961,7965,7969,
    7973,7977,7981,7985,7989,7994,7998,8002,8006,8010,
    8014,8018,8022,8026,8030,8034,8039,8043,8047,8051,
    8055,8059,8063,8067,8071,8075,8079,8083,8087,8091,
    8095,8099,8104,8108,8112,8116,8120,8124,8128,8132,
    8136,8140,8144,8148,8152,8156,8160,8164,8168,8172,
    8176,8180,8184,8188,8192,8192 
};

extern "C"
{
  INT16 abs(int);

  INT32 labs(long);
}


//--------------------公共函数-------------------
	INT16 	isqrt(long ax);
	INT16 	igap(int curr_value, const FLAG_TABLE * f_table, int old_flag);


//===========================================================================
// End of file.
//===========================================================================
